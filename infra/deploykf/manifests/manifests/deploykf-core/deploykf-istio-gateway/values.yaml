########################################
## SHARED | deploykf-helpers
########################################
deployKF_helpers:
  deploykf_gateway:
    http_endpoint: "deploykf.cloudnative.space:8080"
    https_endpoint: "deploykf.cloudnative.space:8443"


########################################
## SHARED | deploykf
########################################
deployKF:
  extraManifests:

  clusterDomain: cluster.local

  kubeflow:
    namespace: kubeflow
    useridHeader: kubeflow-userid
    pipelines:
      enabled: true
      kfpV2:
        defaultPipelineRoot: "{scheme}://{bucket_name}/v2/artifacts/{profile_name}?region={bucket_region}&endpoint={endpoint}&disableSSL={not_use_ssl}&s3ForcePathStyle=true"
      cache:
        namespaceRedirect: true
    notebooks:
      enabled: true
    tensorboards:
      enabled: true

  certManager:
    clusterIssuer:
      issuerName: "cloudflare"

  argoWorkflows:
    enabled: true
    namespace: "kubeflow-argo-workflows"
    artifactRepository:
      keyFormat: "artifacts/{{ workflow.namespace }}/{{ workflow.name }}/{{ workflow.creationTimestamp.Y }}/{{ workflow.creationTimestamp.m }}/{{ workflow.creationTimestamp.d }}/{{ pod.name }}"

  auth:
    namespace: "deploykf-auth"
    dex:
      clients:
        oauth2Proxy:
          clientId: "oauth2-proxy"
        kubeflowPipelinesSDK:
          enabled: true
          clientId: "kubeflow-pipelines-sdk"

  gateway:
    name: "deploykf-gateway"
    httpsRedirectName: "deploykf-gateway-https-redirect"
    selectorLabels: {"app":"deploykf-gateway","istio":"deploykf-gateway"}
    hostname: "deploykf.cloudnative.space"
    ports:
      http: 8080
      https: 8443
    servicePorts:
      http: ~
      https: ~
    tls:
      enabled: true
      clientsUseHttps: true
      matchSNI: true
      redirect: true
    enableProxyProtocol: false
    xffNumTrustedHops: 0
    emailToLowercase: false

  minio:
    enabled: false
    namespace: "deploykf-minio"


########################################
## DEPENDENCY | istio-gateway
########################################
## we reference the "gateway" chart (https://istio-release.storage.googleapis.com/charts) in `dependencies` of Chart.yaml
## we must indent our values under `gateway:` in this file
gatewayEnabled: true
gateway:
  name: "deploykf-gateway"

  replicaCount: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80

  serviceAccount:
    name: "deploykf-gateway"
    annotations: {}

  service:
    annotations: {}
    type: "LoadBalancer"
    loadBalancerIP: "192.168.77.207"
    loadBalancerSourceRanges: []
    externalTrafficPolicy: ""
    externalIPs: []
    ports:
      ## NOTE: the status-port is required for many LoadBalancer services (like AWS NLB),
      ##       as they poll the first port of a service to determine if it's ready to receive traffic
      ## NOTE: port 15021 is special, istio responds to HTTP health checks on this port under /healthz/ready
      ##       https://istio.io/latest/docs/ops/deployment/requirements/#ports-used-by-istio
      - name: status-port
        port: 15021
        protocol: TCP
        targetPort: 15021
      - name: http
        port: 8080
        protocol: TCP
        targetPort: 8080
      - name: https
        port: 8443
        protocol: TCP
        targetPort: 8443

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 2000m
      memory: 1024Mi

  podAnnotations: {}

  securityContext: ~
  containerSecurityContext: ~

  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Pod environment variables
  env: {}

  # Labels to apply to all resources
  labels: {}

  # Annotations to apply to all resources
  annotations: {}